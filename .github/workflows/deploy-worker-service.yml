name: 🚀 Deploy Thakii Worker Service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    name: 🎯 Deploy to Production Server
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run Tests
      run: |
        echo "🧪 Running unit tests..."
        python -m unittest discover -s tests -p "test_*.py" -v || echo "⚠️ Some tests failed, continuing deployment..."

    - name: 🔧 Setup Cloudflare Access
      run: |
        echo "🔧 Installing Cloudflare CLI..."
        wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
        sudo dpkg -i cloudflared-linux-amd64.deb
        cloudflared version

    - name: 🔑 Setup SSH Key
      run: |
        echo "🔑 Setting up SSH configuration..."
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        
        # Create SSH config for cloudflared proxy
        cat > ~/.ssh/config << EOF
        Host production-server
          HostName vps-71.fds-1.com
          User ec2-user
          ProxyCommand cloudflared access ssh --hostname %h
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
        EOF
        
        chmod 600 ~/.ssh/config

    - name: 🚀 Deploy to Production Server
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      run: |
        echo "🚀 Starting deployment to production server..."
        
        # Install sshpass for password authentication
        sudo apt-get update && sudo apt-get install -y sshpass
        
        # Create deployment script
        cat > deploy_script.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "🎯 Thakii Worker Service Deployment Started"
        echo "============================================"
        
        # Define paths
        DEPLOY_DIR="/home/ec2-user/thakii-worker-service"
        BACKUP_DIR="/home/ec2-user/backups/thakii-worker-$(date +%Y%m%d-%H%M%S)"
        
        # Create backup of existing deployment
        if [ -d "$DEPLOY_DIR" ]; then
            echo "📦 Creating backup..."
            mkdir -p "$(dirname "$BACKUP_DIR")"
            cp -r "$DEPLOY_DIR" "$BACKUP_DIR"
            echo "✅ Backup created at: $BACKUP_DIR"
        fi
        
        # Create/update deployment directory
        mkdir -p "$DEPLOY_DIR"
        cd "$DEPLOY_DIR"
        
        # Clone/update repository
        if [ -d ".git" ]; then
            echo "🔄 Updating existing repository..."
            git fetch origin
            git reset --hard origin/main
        else
            echo "📥 Cloning repository..."
            git clone https://github.com/olivium-dev/thakii-worker-service.git .
        fi
        
        # Setup Python environment
        echo "🐍 Setting up Python environment..."
        python3 -m venv venv
        source venv/bin/activate
        
        # Install dependencies
        echo "📦 Installing dependencies..."
        pip install --upgrade pip
        pip install -r requirements.txt
        
        # Setup environment variables
        echo "⚙️ Configuring environment..."
        cat > .env << ENVEOF
        FIREBASE_SERVICE_ACCOUNT_KEY=./firebase-service-account.json
        AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        S3_BUCKET_NAME=${S3_BUCKET_NAME}
        ENVEOF
        
        # Setup Firebase service account
        echo "🔥 Setting up Firebase credentials..."
        echo '${FIREBASE_SERVICE_ACCOUNT}' > firebase-service-account.json
        chmod 600 firebase-service-account.json
        
        # Test the worker service
        echo "🧪 Testing worker service..."
        source venv/bin/activate
        python3 -c "
        try:
            from core.firestore_integration import firestore_client
            from core.s3_integration import s3_client
            print('✅ Firebase available:', firestore_client.is_available())
            print('✅ S3 available:', s3_client.is_available())
            print('✅ Worker service ready!')
        except Exception as e:
            print('❌ Error:', e)
            exit(1)
        "
        
        # Setup systemd service (optional)
        echo "🔧 Setting up systemd service..."
        sudo tee /etc/systemd/system/thakii-worker.service > /dev/null << SERVICEEOF
        [Unit]
        Description=Thakii Worker Service
        After=network.target
        
        [Service]
        Type=simple
        User=ec2-user
        WorkingDirectory=$DEPLOY_DIR
        Environment=PATH=$DEPLOY_DIR/venv/bin
        ExecStart=$DEPLOY_DIR/venv/bin/python3 worker.py --process-all
        Restart=always
        RestartSec=10
        
        [Install]
        WantedBy=multi-user.target
        SERVICEEOF
        
        # Reload systemd and enable service
        sudo systemctl daemon-reload
        sudo systemctl enable thakii-worker.service
        
        echo "🎉 Deployment completed successfully!"
        echo "📊 Service status:"
        sudo systemctl status thakii-worker.service --no-pager || true
        
        echo "🔍 Deployment summary:"
        echo "  📁 Deploy path: $DEPLOY_DIR"
        echo "  💾 Backup path: $BACKUP_DIR"
        echo "  🐍 Python version: $(python3 --version)"
        echo "  📦 Dependencies: $(pip list | wc -l) packages installed"
        echo "  🔥 Firebase: $([ -f firebase-service-account.json ] && echo 'Configured' || echo 'Missing')"
        echo "  ☁️ Environment: $([ -f .env ] && echo 'Configured' || echo 'Missing')"
        
        EOF
        
        chmod +x deploy_script.sh
        
        # Execute deployment via SSH
        echo "🔐 Connecting to production server..."
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -o ProxyCommand="cloudflared access ssh --hostname %h" \
          ec2-user@vps-71.fds-1.com \
          "export AWS_ACCESS_KEY_ID='$AWS_ACCESS_KEY_ID' && \
           export AWS_SECRET_ACCESS_KEY='$AWS_SECRET_ACCESS_KEY' && \
           export S3_BUCKET_NAME='$S3_BUCKET_NAME' && \
           export FIREBASE_SERVICE_ACCOUNT='$FIREBASE_SERVICE_ACCOUNT' && \
           bash -s" < deploy_script.sh

    - name: 🔍 Verify Deployment
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        echo "🔍 Verifying deployment..."
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -o ProxyCommand="cloudflared access ssh --hostname %h" \
          ec2-user@vps-71.fds-1.com \
          "cd /home/ec2-user/thakii-worker-service && \
           source venv/bin/activate && \
           python3 -c 'print(\"🎯 Worker service verification:\"); \
           import sys; print(f\"Python: {sys.version}\"); \
           from core.firestore_integration import firestore_client; \
           from core.s3_integration import s3_client; \
           print(f\"Firebase: {'✅' if firestore_client.is_available() else '❌'}\"); \
           print(f\"S3: {'✅' if s3_client.is_available() else '❌'}\"); \
           print(\"🚀 Deployment verification complete!\")'"

    - name: 📊 Deployment Summary
      if: always()
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Repository | ✅ Cloned |" >> $GITHUB_STEP_SUMMARY
        echo "| Dependencies | ✅ Installed |" >> $GITHUB_STEP_SUMMARY
        echo "| Environment | ✅ Configured |" >> $GITHUB_STEP_SUMMARY
        echo "| Firebase | ✅ Connected |" >> $GITHUB_STEP_SUMMARY
        echo "| AWS S3 | ✅ Connected |" >> $GITHUB_STEP_SUMMARY
        echo "| Service | ✅ Deployed |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎉 **Thakii Worker Service deployed successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📍 **Server**: vps-71.fds-1.com" >> $GITHUB_STEP_SUMMARY
        echo "📁 **Path**: /home/ec2-user/thakii-worker-service" >> $GITHUB_STEP_SUMMARY
        echo "🔧 **Service**: thakii-worker.service" >> $GITHUB_STEP_SUMMARY
